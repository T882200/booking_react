{"version":3,"sources":["registerServiceWorker.js","components/HLData.js","components/HLRooms.js","components/Employee.js","components/EmployeeRank.js","components/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","styles","data","fontFamily","fontSize","color","caption","HLData","props","react_default","a","createElement","style","HLRooms","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","availableRooms","reservedRooms","checkedIn","self","assertThisInitialized","fetch","res","json","setState","JSON","stringify","err","container_","components_HLData","Component","display","justifyContent","marginLeft","marginRight","profileImg","width","height","borderRadius","record","alignItems","padding","paddingLeft","paddingRight","delta","Employee","alt","src","pic","objectSpread","name","EmployeeRank","arEmployees","fetchAndRankEmployees","empURL","_this2","rawData","oEmployees","prop","forEach","item","employee","emp","calcDelta","checkOutDate","checkInDate","id","push","sort","b","format","moment","valueOf","wrapper","onLoad","action","title","map","EmployeeObject","index","components_Employee","key","firstName","lastName","substring","profileImageUrl","marginTop","margin","textAlign","App","handler","bind","loading","messageShown","className","dist_default","bgColor","spinnerColor","textColor","text","HLRooms_HLRooms","hr","EmployeeRank_EmployeeRank","borderTop","borderColor","URL","process","origin","addEventListener","concat","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","AppComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b57dff2.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefit-redemption of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\n// two props:\n// caption = arbitrary caption\n// data = data from high order component state\n\nconst HLData = (props)=>(\n    <div>\n        <div style={styles.data}>{props.data}</div>\n        <div style={styles.caption}>{props.caption}</div>\n    </div>\n);\n\nconst styles = {\n    data:{\n        fontFamily:\"Roboto\",\n        fontSize:\"24px\",\n        color:\"#fff\"\n    },\n    caption:{\n        fontFamily:\"Lato\",\n        fontSize:\"12px\",\n        color:\"#72848b\"\n    }\n};\n\nexport default HLData;","import React,{Component} from \"react\";\nimport HLData from \"./HLData\";\n\nexport default class HLRooms extends Component{\n    constructor(){\n        super();\n        this.state={\n            availableRooms:0,\n            reservedRooms:0,\n            checkedIn:0\n        };\n        \n        const self=this;\n        fetch(\"https://interview-booking-api.herokuapp.com/api/booking-snapshot\")\n        .then ( res => res.json())\n        .then((json) => {\n            self.setState({availableRooms:json.availableRooms,\n                          reservedRooms:json.reservedRooms,\n                          checkedIn:json.checkedIn});\n            // check the data json structure\n            console.log (\"json is = \",JSON.stringify(json));\n        })\n        .catch((err) => {\n            console.log(\"error: $\",err);\n        });\n    }\n    render(){\n        return (\n            <div style={styles.container_}>\n                <HLData caption=\"Rooms available\" data={this.state.availableRooms}/>\n                <HLData caption=\"Reserved rooms\" data={this.state.reservedRooms}/>\n                <HLData caption=\"Checked in\" data={this.state.checkedIn}/>\n            </div>\n        );\n    }\n\n}\n\nconst styles={\n    container_:{\n        display:\"flex\",\n        justifyContent:\"space-between\",\n        marginLeft:\"100px\",\n        marginRight:\"100px\"\n    }\n}","import React from \"react\";\n\n// this component comes with these props:\n// props.pic = employee picture (fetched from the api)\n// props.deltaInHours = employee delta Hours sum (fetched from the api)\n// props.name = employee name (fetched from the api)\n\nconst Employee = (props)=>(\n    <div style={styles.record}>\n        <img alt=\"\" style={styles.profileImg} src={props.pic}/>\n        <span style={{...styles.padding}}>{props.name}</span>\n        <span style={styles.delta}>{props.delta} hours</span>\n    </div>\n);\nconst styles = {\n    profileImg:{\n        width:\"40px\",\n        height:\"40px\",\n        borderRadius: \"50%\"\n    },\n    record:{\n        display:\"flex\",\n        alignItems:\"center\",\n        padding:\"1em\"\n    },\n    padding:{\n        paddingLeft:\"2em\",\n        paddingRight:\"2em\"\n    },\n    delta:{\n        color: \"#72848b\"\n    }\n\n}\nexport default Employee;","import React,{ Component } from \"react\";\nimport Employee from \"./Employee\";\nimport moment from \"moment\";\n\nexport default class EmployeeRank extends Component{\n    // Construct the component\n    constructor(){\n        super();\n        \n        this.state={\n            arEmployees:[],\n        }\n\n        this.fetchAndRankEmployees(\"https://interview-booking-api.herokuapp.com/api/bookings\")\n    }\n    \n    \n\n    \n    \n    // method that fetching employees object from API and rank it. using Fetch API and moment\n    fetchAndRankEmployees(empURL) {\n        // fetch full data from API\n        fetch(empURL)\n        // jsonify the data\n        .then((res) => res.json())\n        // take the raw data and sort him\n        .then((rawData) => {\n            \n            // log the raw data for testing\n            console.log(\"this is the raw data:\", rawData);\n            \n            // init two data structurs for sorting\n            const oEmployees={},arEmployees=[];\n            \n            // iterate trough the data, dnd use every order object\n            rawData.forEach((item)=>{\n                if (item.employee){\n            \n                    // shorthand for the seller\n                    const emp=item.employee;\n            \n                    // calculate vacation delta hours, using moment.js\n                    const delta = this.calcDelta(item.checkOutDate,item.checkInDate,\"DD-MM-YYYY\");\n            \n                    // check if employee isn't exist in the object\n                    if (!oEmployees[emp.id]){\n                        oEmployees[emp.id]={\n                            ...emp,\n                            delta:0,\n\n                        }\n                        // add calculated delta to the global delta of each\n                        oEmployees[emp.id].delta+=delta;\n                    }\n                }\n            });\n            // push every employee in the previous object,to new array of employees\n            for (const prop in oEmployees){\n                arEmployees.push(oEmployees[prop]);\n                \n                // sorting the employees by global vacation hours - descendingly\n                arEmployees.sort(function(a,b){\n                    return b.delta-a.delta;\n                })\n            }\n            \n            // add the array of sorted employees to state\n            this.setState({arEmployees:arEmployees});\n            \n            console.log(\"after sort - \"+JSON.stringify(arEmployees));\n        })\n        // error catching\n        .catch(function(err){\n            console.log (\"There is an error in fetching data in EmployeeRank component. -> \",err);\n        });\n    }\n    \n    // helper func for calc delta hours between checkin and checkout | TODO: make it even more reusable with switch statment\n    calcDelta(a,b,format) {\n        const del = (moment(a,format).valueOf()-\n        moment(b,format).valueOf())/1000/60/60;\n        return del;\n    }\n    \n    \n    // render the rank results to the page\n    render(){\n        return (\n            <div style={styles.wrapper} onLoad={this.props.action}>\n                <div style={styles.title}>Employee stats:</div>\n                {\n                    // map through any employee\n                    this.state.arEmployees.map((EmployeeObject,index)=>{\n                        if (index<3){\n                        return (\n                            <Employee \n                                key={index} \n                                name={EmployeeObject.firstName+\" .\"+EmployeeObject.lastName.substring(0,1)} \n                                pic={EmployeeObject.profileImageUrl} \n                                delta={EmployeeObject.delta}\n                            />\n                        );\n                        } \n                        \n                        else {\n                            return null;\n                        }\n                    })\n                }\n            </div>\n        )\n    }\n}\n\n\n\n\n\nconst styles = {\n    wrapper:{\n        color:\"#fff\",\n        marginTop:\"50px\",\n        marginLeft:\"100px\",\n        marginRight:\"100px\"\n    },\n    emp:{\n        color:\"#fff\",\n    },\n    title:{\n        fontFamily:\"Lato\",\n        fontSize:\"20px\",\n        color:\"#fff\",\n        margin:\"2em 0\",\n        textAlign: \"left\"\n    }\n\n}","import React, { Component } from 'react';\nimport HLRooms from \"./HLRooms\";\nimport EmployeeRank from \"./EmployeeRank\";\n// loading animation\nimport LoadingScreen from 'react-loading-screen';\n\n// import EmployeeChart from \"./EmployeeChart\";\nimport './App.scss';\n\nexport default class App extends Component {\n    constructor(){\n        super();\n        \n        // Bind the this context to the handler function\n        this.handler = this.handler.bind(this);\n        \n        // Set some state\n        this.state={\n            loading:true,\n            messageShown: false\n        }\n    }\n    // Loading handler - use to preview the loading screen\n    // This method will be sent to the child component\n    handler() {\n        this.setState({\n            loading: false\n        });\n        \n        // console checing\n        this.state.loading ? console.log(\"loading:Yes\") : console.log(\"loading:No\");\n    }\n    \n\n    render() {\n        // if(this.state.loading){\n        //     console.log(\"loading...\")\n        //     return <ReactLoading type=\"balls\" color=\"#000000\" height={'20%'} width={'20%'} delay={5000} />\n        // }\n        \n        return (\n            <div className='app'>\n                <LoadingScreen\n                    loading={this.state.loading}\n                    bgColor='#202b33'\n                    spinnerColor='#9ee5f8'\n                    textColor='#72848b'\n                    text='Loading your booking app'\n                >\n                    <div className=\"page-content\">\n                        {/*component that present global info about rooms availability*/}\n                        <HLRooms/>\n                        <hr style={styles.hr} />\n                        {/*component that present top 3 employees*/}\n                        {/*Render the child component and set the action property with the handler as value*/}\n                        <EmployeeRank action={this.handler} />\n                        {/*<EmployeeChart/>*/}\n                    </div>\n                </LoadingScreen>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    hr: {\n        borderTop: \".5px solid\",\n        borderColor: \"#72848b\",\n        width: \"90%\",\n        marginTop: \"50px\"\n    }\n\n\n}\n","// importing react libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport registerServiceWorker from './registerServiceWorker';\n\n// import main component\nimport App from './components/App';\n\n// import style\nimport './styles/index.scss';\n\n// cache your assets when the user is offline or on slow network\nregisterServiceWorker();\n\n// main renderer of the dashboard\nconst render = AppComponent => {\n    ReactDOM.render(\n        <AppComponent/>,\n        document.getElementById('root')\n    );\n};\n\nrender(App);\n\n\n"],"sourceRoot":""}